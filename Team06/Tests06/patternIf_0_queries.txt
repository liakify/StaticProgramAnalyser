1 - arg variant: (v, _, _)
variable v; if ifs;
Select v pattern ifs (v, _, _)
a, c, e
5000
1 - arg variant: (v, _, _) - select ifs
variable v; if ifs;
Select ifs pattern ifs (v, _, _)
2, 6, 12
5000
1 - arg variant: (_, _, _)
variable v; if ifs;
Select ifs pattern ifs (_, _, _)
2, 6, 12
5000
1 - arg variant: (IDENT, _, _)
variable v; if ifs;
Select ifs pattern ifs ("c", _, _)
6
5000
1 - arg variant: (IDENTnotFound, _, _) => none
variable v; if ifs;
Select ifs pattern ifs ("notFound", _, _)

5000
- invalid: 2 arguments
variable v; if ifs;
Select v such that pattern ifs (v, _)

5000
 - invalid: 4 arguments
variable v; if ifs;
Select v such that pattern ifs (v, _, _, _)

5000
 - invalid: argument type
variable v; if ifs;
Select v such that pattern ifs (_, _, v)

5000
 - invalid: argument type
variable v; if ifs;
Select v such that pattern ifs (_, v, _)

5000
 - invalid: argument type
if ifs;
Select ifs such that pattern ifs (1, _, _)

5000
 - invalid: argument type
stmt s; if ifs;
Select s such that pattern ifs (s, _, _)

5000
 - invalid: argument type
read r; if ifs;
Select r such that pattern ifs (r, _, _)

5000
 - invalid: argument type
print pn; if ifs;
Select pn such that pattern ifs (pn, _, _)

5000
 - invalid: argument type
call c; if ifs;
Select c such that pattern ifs (c, _, _)

5000
 - invalid: argument type
while w; if ifs;
Select w such that pattern ifs (w, _, _)

5000
 - invalid: argument type
if ifs, ifs1;
Select ifs1 such that pattern ifs (ifs1, _, _)

5000
 - invalid: argument type
assign a; if ifs;
Select a such that pattern ifs (a, _, _)

5000
 - invalid: argument type
constant cn; if ifs;
Select cn such that pattern ifs (cn, _, _)

5000
 - invalid: argument type
procedure p; if ifs;
Select p such that pattern ifs (p, _, _)

5000
 - invalid: argument type
prog_line pl; if ifs;
Select pl such that pattern ifs (pl, _, _)

5000