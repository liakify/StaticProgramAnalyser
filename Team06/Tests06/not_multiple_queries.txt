1 - from all <a, v> pairs get distinct assignments after taking away <a, v> pairs where a uses v
assign a; variable v;
Select a such that not Uses (a, v)
1, 2, 3, 4, 5, 6, 7
5000
2 - from all <a, v> pairs get distinct assignments after taking away <a, v> pairs where a updates v
assign a; variable v;
Select a pattern not a (v, _)
1, 2, 3, 4, 5, 6, 7, 8
5000
3 - from all <a, v> pairs get distinct assignments after taking away <a, v> pairs where v.varName = "X"
assign a; variable v;
Select v with not v.varName = "X" 
A, use
5000
4 - negated relation with negated pattern
assign a; variable v;
Select a such that not Uses (a, v) pattern not a (v, _)
1, 2, 3, 4, 5, 6, 7
5000
5 - negated relation with pattern
assign a; variable v;
Select a such that not Uses (a, v) pattern a (v, _)
3, 4, 7
5000
6 - relation with negated pattern
assign a; variable v;
Select a such that Uses (a, v) pattern not a (v, _)
3, 4, 5, 6, 8
5000
7 -  negated relation with negated equality
assign a; variable v;
Select a such that not Uses (a, v) with not v.varName = "X"
1, 2, 3, 4, 5, 6, 7
5000
8 - negated relation with two negated equalities
assign a; variable v;
Select a such that not Uses (a, v) with not v.varName = "X" and not v.VarName = "use"
1, 3, 7
5000
9 - relation with negated equality
assign a; variable v;
Select a such that Uses (a, v) with not v.varName = "X"
2, 4, 5, 6, 8
5000
10 - negated relation with equality
assign a; variable v;
Select a such that not Uses (a, v) with v.varName = "X"
2, 4, 7
5000
11 - negated pattern with negated equality
assign a; variable v;
Select a with not v.varName = "X" pattern not a (v, _)
1, 2, 3, 4, 5, 6, 7, 8
5000
12 - negated pattern with two negated equalities
assign a; variable v;
Select a with not v.varName = "X" and not v.varName = "use" pattern not a (v, _)
1, 4, 5, 7, 8
5000
13 - negated pattern with equality
assign a; variable v;
Select a with v.varName = "X" pattern not a (v, _)
2, 3, 6, 7, 8
5000
14 - pattern with negated equality
assign a; variable v;
Select a with not v.varName = "X" pattern a (v, _)
2, 3, 6, 7, 8
5000
15 - relation with pattern with equality
assign a; variable v;
Select a such that Uses (a, v) pattern a (v, _) with v.varName = "X"
1, 5
5000
16 - relation with pattern with negated equality
assign a; variable v;
Select a such that Uses (a, v) pattern a (v, _) with not v.varName = "X"
2, 6, 8
5000
17 - relation with negated pattern with negated equality
assign a; variable v;
Select a such that Uses (a, v) pattern not a (v, _) with not v.varName = "X"
4, 5, 8
5000
18 - relation with negated pattern with equality
assign a; variable v;
Select a such that Uses (a, v) pattern not a (v, _) with v.varName = "X"
3, 6, 8
5000
19 - negated relation with pattern with equality
assign a; variable v;
Select a such that not Uses (a, v) pattern a (v, _) with v.varName = "X"
4
5000
20 - negated relation with pattern with negated equality
assign a; variable v;
Select a such that not Uses (a, v) pattern a (v, _) with not v.varName = "X"
3ï¼Œ7
5000
21 - negated relation with negated pattern with equality
assign a; variable v;
Select a such that not Uses (a, v) pattern not a (v, _) with v.varName = "X"
2, 7
5000
22 - negated relation with negated pattern with negated equality
assign a; variable v;
Select a such that not Uses (a, v) pattern not a (v, _) with not v.varName = "X"
1, 2, 3, 4, 5, 6
5000
23 - relation with negated equality; tuple return
assign a; variable v;
Select <a, v> such that Uses (a, v) with not v.varName = "X"
2 A, 4 A, 5 A, 6 A, 8 A, 8 use
5000
24 - negated pattern with negated equality; tuple return
assign a; variable v;
Select a with not v.varName = "X" pattern not a (v, _)
1 A, 1 use, 2 use, 3 use, 4 A, 4 use, 5 A, 5 use, 6 use, 7 A, 8 A
5000
25 - relation with pattern with negated equality; tuple return
assign a; variable v;
Select a such that Uses (a, v) pattern a (v, _) with not v.varName = "X"
2 A, 6 A, 8 use
5000
26 - relation with negated copy
assign a; variable v;
Select v such that Uses (a, v) and not Uses (a, v)

5000
27 - pattern with negated copy
assign a; variable v;
Select v pattern a (v, _) and not a (v, _)

5000
28 - equality with negated copy
assign a; variable v;
Select v with v.varName = "A" and not "A" = v.varName

5000
29 - two negated relations, one shared synonym
assign a;
Select a such that not Affects(1, a) and not Affects(5, a)
1, 2, 4, 5, 7
5000
30 - two negated relations, two shared synonyms
assign a1, a2;
Select <a1, a2> such that not Follows(a1, a2) and not Follows(a2, a1)
1 1, 1 3, 1 4, 1 5, 1 6, 1 7, 1 8, 2 2, 2 4, 2 5, 2 6, 2 7, 2 8, 3 1, 3 3, 3 5, 3 6, 3 7, 3 8, 4 1, 4 2, 4 4, 4 6, 4 7, 4 8, 5 1, 5 2, 5 3, 5 5, 5 7, 5 8, 6 1, 6 2, 6 3, 6 4, 6 6, 6 8, 7 1, 7 2, 7 3, 7 4, 7 5, 7 7, 8 1, 8 2, 8 3, 8 4, 8 5, 8 6, 8 8
5000
31 - two negated patterns, one shared synonym
assign a1, a2; variable v;
Select <a1, a2> pattern not a1("A", _) and not a2("X", _)
1 2, 1 3, 1 6, 1 7, 1 8, 4 2, 4 3, 4 6, 4 7, 4 8, 5 2, 5 3, 5 6, 5 7, 5 8, 7 2, 7 3, 7 6, 7 7, 7 8, 8 2, 8 3, 8 6, 8 7, 8 8
5000
32 - two negated relations with negated equality with two synonyms
assign a1, a2;
Select <a1, a2> with not a1.stmt# = a2.stmt# such that not Uses(a1, "X") and not Modifies(a2, "X")
2 3, 2 6, 2 7, 2 8, 4 2, 4 3, 4 6, 4 7, 4 8, 7 2, 7 3, 7 6, 7 8
5000
33 - multiple negation clauses, selecting unrelated synonym
stmt s; assign a; variable v;
Select s such that such that Uses (a, v) pattern a (v, _) with not v.varName = "X"
1, 2, 3, 4, 5, 6, 7, 8
5000