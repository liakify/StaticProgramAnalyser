1 - arg variant (n1, n2)
prog_line n1, n2;
Select n1 such that Next(n1, n2)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40
5000
2 - arg variant (n1, n2): Select n2
prog_line n1, n2;
Select n2 such that Next(n1, n2)
2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41
5000
3 - arg variant (n1, n2): non-related
prog_line n1, n2, n;
Select n such that Next(n1, n2)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42
5000
4 - arg variant (n, n)
prog_line n;
Select n such that Next(n, n)

5000
5 - arg variant (n, _)
prog_line n;
Select n such that Next(n, _)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40
5000
6 - arg variant (_, n)
prog_line n;
Select n such that Next(_, n)
2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41
5000
7 - arg variant (_, _)

Select BOOLEAN such that Next(_, _)
TRUE
5000
8 - arg variant (n, 1)
prog_line n;
Select n such that Next(n, 2)
1
5000
9 - arg variant (1, n)
prog_line n;
Select n such that Next(1, n)
2
5000
10 - arg variant (1, n): If condition
prog_line n;
Select n such that Next(4, n)
5, 14
5000
11 - arg variant (1, n): If statement list end
prog_line n;
Select n such that Next(7, n)
9
5000
12 - arg variant (1, n): If else statement list end
prog_line n;
Select n such that Next(8, n)
9
5000
13 - arg variant (1, n): While condition
prog_line n;
Select n such that Next(14, n)
15, 21
5000
14 - arg variant (1, n): While statement list end
prog_line n;
Select n such that Next(20, n)
14
5000
15 - arg variant (_, 1)

Select BOOLEAN such that Next(_, 2)
TRUE
5000
16 - arg variant (_, 1): Outer statement has no predecessor

Select BOOLEAN such that Next(_, 1)
FALSE
5000
17 - arg variant (1, _)

Select BOOLEAN such that Next(1, _)
TRUE
5000
18 - arg variant (1, _): Last statement has no successor

Select BOOLEAN such that Next(22, _)
FALSE
5000
19 - arg variant (1, 1)

Select BOOLEAN such that Next(3, 4)
TRUE
5000
20 - arg variant (1, 1): Indirect Next, Valid

Select BOOLEAN such that Next(10, 12)
TRUE
5000
21 - arg variant (1, 1): Indirect Next, Invalid

Select BOOLEAN such that Next(1, 3)
FALSE
5000
22 - arg variant (1, 1): Same prog_line

Select BOOLEAN such that Next(1, 1)
FALSE
5000
23 - arg variant (1, 1): Negative prog_line LHS
prog_line n;
Select n such that Next(-1, 1)

5000
24 - arg variant (1, 1): Negative prog_line RHS
prog_line n;
Select n such that Next(1, -1)

5000
25 - arg variant (1, 1): Negative prog_line LHS/RHS
prog_line n;
Select n such that Next(-2, -1)

5000
26 - arg variant (n, s)
prog_line n; stmt s;
Select s such that Next(n, s)
2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41
5000
27 - arg variant (s, n)
prog_line n; stmt s;
Select s such that Next(s, n)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40
5000
28 - arg variant (n, a)
prog_line n; assign a;
Select a such that Next(n, a)
2, 9, 11, 12, 16, 20, 22, 34, 36, 37
5000
29 - arg variant (n, c)
prog_line n; call c;
Select c such that Next(n, c)
13, 39
5000
30 - arg variant (n, r)
prog_line n; read r;
Select r such that Next(n, r)
17, 29, 41
5000
31 - arg variant (n, pn)
prog_line n; print pn;
Select pn such that Next(n, pn)
3, 7, 8, 19, 21, 27, 30, 31, 38, 40
5000
32 - arg variant (n, ifs)
prog_line n; if ifs;
Select ifs such that Next(n, ifs)
4, 5, 6, 15, 28, 32, 35
5000
33 - arg variant (n, w)
prog_line n; while w;
Select w such that Next(n, w)
10, 14, 18, 24, 25, 26, 33
5000
34 - arg variant (s, _)
stmt s;
Select s such that Next(s, _)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40
5000
35 - arg variant (a, _)
assign a;
Select a such that Next(a, _)
1, 2, 9, 11, 12, 16, 20, 34, 36, 37
5000
36 - arg variant (a, c)
assign a; call c;
Select c such that Next(a, c)
13
5000
37 - arg variant (a, r)
assign a; read r;
Select r such that Next(a, r)

5000
38 - arg variant (a, pn)
assign a; print pn;
Select pn such that Next(a, pn)
3, 38
5000
39 - arg variant (a, ifs)
assign a; if ifs;
Select ifs such that Next(a, ifs)

5000
40 - arg variant (a, w)
assign a; while w;
Select w such that Next(a, w)
10, 14, 18, 33
5000
41 - arg variant (c, _)
call c;
Select c such that Next(c, _)
13, 39
5000
42 - arg variant (c, r)
call c; read r;
Select r such that Next(c, r)

5000
43 - arg variant (c, pn)
call c; print pn;
Select pn such that Next(c, pn)
40
5000
44 - arg variant (c, ifs)
call c; if ifs;
Select ifs such that Next(c, ifs)

5000
45 - arg variant (c, w)
call c; while w;
Select w such that Next(c, w)

5000
46 - arg variant (r, _)
read r;
Select r such that Next(r, _)
17, 23, 29
5000
47 - arg variant (r, pn)
read r; print pn;
Select pn such that Next(r, pn)
31
5000
48 - arg variant (r, ifs)
read r; if ifs;
Select ifs such that Next(r, ifs)

5000
49 - arg variant (r, w)
read r; while w;
Select w such that Next(r, w)
18, 24
5000
50 - arg variant (pn, _)
print pn;
Select pn such that Next(pn, _)
3, 7, 8, 19, 21, 27, 30, 31, 38, 40
5000
51 - arg variant (pn, ifs)
print pn; if ifs;
Select ifs such that Next(pn, ifs)
4
5000
52 - arg variant (pn, w)
print pn; while w;
Select w such that Next(pn, w)
18, 24, 25, 26
5000
53 - arg variant (ifs, _)
if ifs;
Select ifs such that Next(ifs, _)
4, 5, 6, 15, 28, 32, 35
5000
54 - arg variant (w, _)
while w;
Select w such that Next(w, _)
10, 14, 18, 24, 25, 26, 33
5000
55 - arg variant (w, ifs): Nested if in while
while w; if ifs;
Select w such that Next(w, ifs)
14, 25, 26, 33
5000
56 - arg variant (ifs, w): Nested while in if
while w; if ifs;
Select ifs such that Next(ifs, w)
4, 5, 32
5000
57 - arg variant (w1, w2): Nested while in while
while w1, w2;
Select w2 such that Next(w1, w2)
25, 26
5000
58 - arg variant (if, ifs): Nested if in if
if if, ifs;
Select ifs such that Next(if, ifs)
5, 6
5000
59 - Across procedures

Select BOOLEAN such that Next(22, 23)
FALSE
5000
60 - Call within procedure 

Select BOOLEAN such that Next(13, 23)
FALSE
5000
61 - Single line procedure: no predecessor

Select BOOLEAN such that Next(_, 42)
FALSE
5000
62 - Single line procedure: no successor

Select BOOLEAN such that Next(42, _)
FALSE
5000
