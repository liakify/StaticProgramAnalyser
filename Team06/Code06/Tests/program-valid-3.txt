procedure DigimonBattle {
	read PlayerId;
	print PlayerId;
	
	agumon = 100;
	devimon = 9000;

	babyFlameDamage = 30;
	babySlashDamage = 10;
	laughDamage = 0;

	while((devimon > 0) && (agumon > 0) {
		read WillBattleContinue;
		if (WillBattleContinue != 0) then {
			
			read playerMove;

			if (playerMove % 3 == 0) then {
				
				read randomNumber;
				NumberOfStrikes = randomNumber % 6;
				i = 0;

				while (i < NumberOfStrikes) {
					devimon = devimon - NumberOfStrikes * babySlashDamage;
					i = i + 1;
				}

			} else {
				if (playerMove % 3 == 1) then {
					
					devimon = devimon - babyFlameDamage;

				} else {
					
					read roarLength;

					while (	  (!(RoarLength == 0)) || (!(!(agumon < 0)))	) {
						print roarChar;
					}
					
					devimon = devimon;

				}
			}
			
			while (UninitializedVariable == 0) {
				count = 0;
				while (count < 50) {
					count = count + 1;
					if (count <= 20) then {
						
					} else {
						agumon = agumon - laughDamage;
					}
				}
			}

		} else {
			GameOverCodeIsGG = 66;
			print GameOverCodeIsGG;
		}
	}

	light = agumon;
	darkness = devimon;

	if (!(darkness>light)) {
		
		WinningCode = 888;
		print WinningCode;

	} else {
		if (light == darkness) {
			read superl0000ngCalculationMeansFightAintOver;

			a = 10;
			b = 8;
			c = 29;
			d = 777;
			e = 41;

			while (e >= 1) {
				f = a + b - c + d;
				g = a + b - 2 + d;
				h = a + b / 2 * d;
				i = (	a + b	) / 2		* d;
				j = ((	a + b	) / 2	)	* d;
				k = a + e *		e / b	% 10 + c / 6 * 3 / c;
				l = a + e * (	e / b)	% (	10 + c) / 6 * 3 / c;
				m = a + e *		e / (b	% 10 + (c / 6 * 3) / c);
				n = a + ((e *	e) / b	% 10 + c) / (6 * 3) / c;
				o = a + (((((e *	e)))) / b	% 10 + c) / (6 * 3) / c;
			}
		
		} else {
			GameOverCodeIsYouFa1led = 3 + 10 * (19999 % 219 % 30) + 20 / 6;
		}
	}
}
