1 - argument variant: (s, v)
stmt s; variable v;
Select s such that Uses(s, v)
1, 3, 4, 5, 6, 7, 9, 10, 11, 12
5000
1 - argument variant: (s, v) - testing on all nesting levels, bracket levels, boolean and arithmetic operators
stmt s; variable v;
Select v such that Uses(s, v)
b, b1, b2, b3, b4, b5, c, d, e, f, g, h, i, k, l, m, n, o, p, q, r, s, t
5000
1 - argument variant: (s, IDENT)
stmt s;
Select s such that Uses(s, "b")
1
5000
1 - argument variant: (s, IDENT) => empty
stmt s;
Select s such that Uses(s, IDENT)

5000
1 - argument variant: (s, _)
stmt s;
Select s such that Uses(s, _)
1, 3, 4, 5, 6, 7, 9, 10, 11, 12
5000
1 - argument variant: (1, v)
variable v;
Select v such that Uses(1, v)
b, b1, b2, b3, b4, b5
5000
1 - argument variant: (1, v) => empty
variable v;
Select v such that Uses(2, v)

5000
1 - argument variant: (1, IDENT)
stmt s;
Select s such that Uses(1, "b")
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
5000
1 - argument variant: (1, IDENT) => empty
stmt s;
Select s such that Uses(2, "c")

5000
1 - argument variant: (1, _)
stmt s;
Select s such that Uses(1, _)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
5000
1 - argument variant: (1, _) => empty
stmt s;
Select s such that Uses(2, _)

5000
1 - argument variant: stmtRef variant: print
print pn; variable v;
Select pn such that Uses(pn, v)
3, 5, 7, 10, 12
5000
1 - argument variant: stmtRef variant: print => empty
print pn; variable v;
Select pn such that Uses(pn, "b")

5000
1 - argument variant: stmtRef variant: if (all if stmts 'Uses' some variable. So no empty-set case)
if ifs; variable v;
Select ifs such that Uses(ifs, v)
4
5000
1 - argument variant: stmtRef variant: if - select variables
if ifs; variable v;
Select v such that Uses(ifs, v)
d, e, f, g, h, i, k, l, m
5000
1 - argument variant: stmtRef variant: while (all while stmts 'Uses' some variable. So no empty-set case)
while w; variable v;
Select w such that Uses(w, _)
6, 9, 11
5000
1 - argument variant: stmtRef variant: while - select variables
while w; variable v;
Select v such that Uses(w, v)
g, h, i, k, l, m, n, o, p, q, r, s, t
5000
1 - argument variant: stmtRef variant: procedure (TODO: update after Iter. 1)
procedure p; variable v;
Select p such that Uses(p, _)
SelectUses
5000
1 - unfound variable names
stmt s;
Select s such that Uses(s, "notfound")

5000
1 - unrelated synonyms
stmt s, s1;
Select s such that Uses(s1, "b")
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
5000
1 - unrelated synonyms => empty
stmt s, s1;
Select s such that Uses(s1, "a")

5000
1 - invalid: semantics (stmtRef = '_' is ambiguous)
variable v;
Select v such that Uses(_, v)

5000
